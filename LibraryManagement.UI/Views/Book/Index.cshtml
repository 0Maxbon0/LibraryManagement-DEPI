@model IEnumerable<LibraryManagement.BLL.Dtos.BookDtos>

<style>
    /* General Styles */
    body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
        margin: 0;
        padding: 20px;
    }

    h2 {
        text-align: center;
        color: #333;
        margin-bottom: 20px;
    }

    a {
        text-decoration: none;
        color: white;
        padding: 10px 15px;
        border-radius: 5px;
        transition: background-color 0.3s;
    }

    .add-button {
        background-color: #4CAF50; /* Green */
        display: block;
        margin: 0 auto;
        width: fit-content;
        margin-bottom: 20px;
    }

        .add-button:hover {
            background-color: #45a049;
        }

    /* Flexbox Layout for Book List */
    .book-list {
        display: flex;
        flex-wrap: wrap; /* Allow items to wrap to the next line */
        gap: 20px; /* Space between items */
        justify-content: center; /* Center items in the container */
    }

    .book-item {
        display: flex;
        align-items: flex-start;
        background-color: #fff;
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        border: 1px solid #ddd;
        width: 280px; /* Increased width */
        margin: 10px; /* Add margin for spacing */
        overflow: hidden; /* Prevents overflow of content */
    }

    .book-cover {
        width: 100px;
        height: 150px;
        object-fit: cover;
        border-radius: 5px;
        margin-right: 20px;
    }

    .book-details {
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: 8px;
        width: 160px; /* Adjusted width to fit better */
    }

        .book-details h3 {
            margin: 0;
            font-size: 1.2em;
            color: #333;
        }

        .book-details p {
            margin: 0;
            color: #666;
        }

    .action-links {
        margin-top: 10px;
        display: flex;
        gap: 10px;
    }

    .edit-button {
        background-color: #ffa500; /* Orange */
        padding: 8px 12px; /* Adjust padding */
    }

        .edit-button:hover {
            background-color: #ff8c00;
        }

    .delete-button {
        background-color: #ff4c4c; /* Red */
        padding: 8px 12px; /* Adjust padding */
    }

        .delete-button:hover {
            background-color: #ff0000;
        }

    /* Image Gallery Styles */
    .image-gallery {
        display: flex;
        justify-content: space-between; /* Space between images */
        gap: 15px; /* Space between images */
        margin: 20px 0;
    }

    .gallery-image {
        width: 150px; /* Adjust width */
        height: 220px; /* Adjust height */
        object-fit: cover;
        border-radius: 8px; /* Rounded corners */
        border: 2px solid #ddd; /* Border around images */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional shadow for depth */
        transition: transform 0.3s; /* Smooth hover effect */
    }

        .gallery-image:hover {
            transform: scale(1.05); /* Slight zoom on hover */
        }

</style>



<body>
    <h2>Books List</h2>
    <a asp-action="Create" class="add-button">Add New Book</a>

    <div class="book-list">
        @if (Model != null && Model.Any())
        {
            <p>Number of books: @Model.Count()</p> <!-- Check how many books are returned -->
            foreach (var book in Model)
            {
             <!--  <p>@book.Title - @book.Author</p> -->
                string imageUrl;

                
                if (book.Title.Contains("AI", StringComparison.OrdinalIgnoreCase))
                {
                    imageUrl = "/images/ai.jpg"; 
                }
                else if (book.Title.Contains("Computer", StringComparison.OrdinalIgnoreCase))
                {
                    imageUrl = "/images/cs.jpg"; 
                }
                else
                {
                    imageUrl = "/images/algo.jpg"; 
                }

                <div class="book-item">
                    <img src="@imageUrl" alt="Cover of @book.Title" class="book-cover" /> 
                    <div class="book-details">
                        <h3>@book.Title</h3>
                        <p>Author: @book.Author</p>
                        <p>Genre: @book.Genre</p>
                        <p>Status: @(book.IsAvailable ? "Available" : "Checked Out")</p>
                        <div class="action-links">
                            <a asp-action="Edit" asp-route-id="@book.BookID" class="edit-button">Edit</a>
                            <a asp-action="Delete" asp-route-id="@book.BookID" class="delete-button">Delete</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No books available.</p>
        }
    </div>
</body>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
}